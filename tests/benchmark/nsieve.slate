
m@(Integer traits) nsieve
[| count |
  count := 0.
  (isPrime ::= Array newSize: m + 2) atAllPut: True.
  2 upTo: m do:
    [| :i |
     (isPrime at: i) ifTrue:
       [(i + i to: m by: i) do:
          [| :k | isPrime at: k put: False].
        count += 1]].
  count
].

n@(Integer traits) primes
[
  m ::= (2 raisedTo: n) * 10000.
  m nsieve
].
