prototypes define: #Pipe &parents: {ExternalResource}.
Pipe locator: ''.
"The command invoked to launch whatever's on the other end of a pipe."

Pipe traits define: #Lib &builder:
  [ExternalInterface newForLibrary: 'pipe' primitives:
  #((Pointer CreatePipeForCommand (Bytes))
    (Int ClosePipe (Pointer))
    (Int ReadIntoByteArray (Pointer Int Bytes Int))
    (Int WriteFromByteArray (Pointer Int Bytes Int))
    (Int IsAtEnd (Pointer))
   ) &leader: 'pipe_'].

p@(Pipe traits) enable
[
  p Lib enable.
  p nativeConnect: p locator
].

p@(Pipe traits) nativeConnect: command
[| handle |
  handle: (p Lib primitives CreatePipeForCommand applyWith: command).
  handle
    ifNil: [error: 'Running the command to create a pipe failed.']
    ifNotNil: [p handle: handle].
  p
].

p@(Pipe traits) newRunning: command
[p new `>> [locator: command. open. ]].

p@(Pipe traits) read: n from: handle into: array startingAt: start
"The primitive for external input: read N bytes from the resource's handle
at the given start position, placing them in the array (starting at 0)."
[p Lib primitives ReadIntoByteArray applyTo: {handle. n. array. start}].

p@(Pipe traits) write: n to: handle from: array startingAt: start
"The primitive for external output: write N bytes to the resource's handle
at the given start position, taking them from the array (starting at 0)."
[p Lib primitives WriteFromByteArray applyTo: {handle. n. array. start}].

Pipe traits define: #ReadStream &parents: {ExternalResource ReadStream}.

p@(Pipe traits) isAtEnd
[(p Lib primitives IsAtEnd applyWith: p handle) isZero not].

s@(Pipe ReadStream traits) isAtEnd
[s resource isAtEnd].
