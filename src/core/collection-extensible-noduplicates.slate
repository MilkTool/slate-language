collections define: #NoDuplicatesCollection &parents: {ExtensibleCollection}.
"The collection type which holds at most one of any object as an element."
"TODO: find out if some collections need to be non-extensible AND optimized
for no-duplicates. (My guess is that the answer is 'no'.)"

nd@(NoDuplicatesCollection traits) add: obj withOccurrences: _
[
  nd include: obj
].

nd@(NoDuplicatesCollection traits) add: obj
[
  nd include: obj
].

nd@(NoDuplicatesCollection traits) include: obj
"This is the default method for adding objects to NoDuplicatesCollection.
It should be overridden in any case, but this implementation allows for any
collection type to be treated as a NoDuplicatesCollection by mixing it in."
[
  nd add: obj ifPresent: [obj]
].

nd@(NoDuplicatesCollection traits) exclude: obj
"This is the default method for removing objects from NoDuplicatesCollection.
It should be overridden in any case, but this implementation allows for any
collection type to be treated as a NoDuplicatesCollection by mixing it in."
[nd remove: obj].

nd@(NoDuplicatesCollection traits) removeEvery: obj
"Objects only occur once in these collections."
[
  nd remove: obj
].

nd@(NoDuplicatesCollection traits) includeAll: c
[
  c do: #(nd include: _) `er.
].
