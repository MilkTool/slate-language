collections define: #Stack &parents: {ExtensibleArray}.
"An abstraction over ExtensibleArray implementations to follow the stack
protocol. The convention is that the Sequence indices run least-to-greatest
from bottom to top."
"TODO: generalize to LIFO and abstract over the underlying implementation."

s@(Stack traits) push: obj
[s addLast: obj].

s@(Stack traits) pop
[s removeLast].

s@(Stack traits) pop: n
[s removeLast: n].

s@(Stack traits) top
[s last].

s@(Stack traits) top: n
[s last: n].

s@(Stack traits) bottom
[s first].

s@(Stack traits) bottom: n
[s first: n].

s@(Stack traits) position
[s size].

s@(Stack traits) position: n
[s lastIndex := s firstIndex + n - 1].

s@(Stack traits) fromTop: offset
[s at: s position - offset - 1].

s@(Stack traits) fromTop: offset put: value
[s at: s position - offset - 1 put: value].

s@(Stack traits) bottomToTopDo: block
[s do: block].

s@(Stack traits) topToBottomDo: block
[s reverseDo: block].
