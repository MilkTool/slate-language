conditions define: #AssertionFailed &parents: {DescriptiveError}.
AssertionFailed description: 'Assertion Failed'.

c@(AssertionFailed traits) signalSaying: description
[description ifNil: [c signal] ifNotNil: [resend]].

_ assert: m@(Method traits) &description [m do ifFalse: [AssertionFailed signalSaying: description]].

_ deny: m@(Method traits) &description [m do ifTrue: [AssertionFailed signalSaying: description]].

_ assert: _@False &description [AssertionFailed signalSaying: description].

_ assert: _@True [].

x assert: expr@(Syntax Node traits) &description [x assert: expr evaluate &description: description].

node@(Syntax Node traits) assert: expr@(Syntax Node traits)
"A macro which (TODO: conditionally) expands into a run-time assertion."
[
  Message sending: #assert: to: {node. expr}
].
