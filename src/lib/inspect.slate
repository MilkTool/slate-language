prototypes define: #Inspector
"This is a very basic object navigator, for playing around and ease of use
at the command line."
&slots: {#here -> here.
"The last object inspected into; the current context."
#entryPoint -> here.
"Where the inspector delegate slot was installed."
#trail -> ({here} as: Stack).
"The previous objects inspected into; the series of contexts followed."
#namespace -> (Namespace clone `>> [addDelegate: lobby. ])
"The namespace in which expressions are evaluated."}.

i@(Inspector traits) newOn: obj
[i clone `setting: #{#trail. #here} to: {{obj} as: i trail. obj}].

_@(Namespace traits) inspect: obj
[| i |
  i := (Inspector newOn: obj).
  here inform: 'You are in a twisty little maze of objects, all alike.'.
  i entryPoint := here.
  i entryPoint addDelegate: i.
  obj
].

i@(Inspector traits) help &target: r
[
  (r ifNil: [Console]) writer
    ; 'The Inspector is an extension to the evaluator which allows "travelling" and keeps a navigable travel-history.\n'
    ; 'here - Answers the current location.\n'
    ; 'go: address - Visits the object at the slot-name or index of \'here\'.\n'
    ; 'slots - Shows the current slots here.\n'
    ; 'indexedSlots - Shows the current array slots here, if any.\n'
    ; 'parents - Shows the current parent slots here.\n'
    ; 'visit: obj - Visits the mentioned object.\n'
    ; 'trail - Shows the trail of visited objects.'
    ; 'back - Goes back one step in the trail.\n'
    ; 'back: N - Goes back N steps along the trail.\n'
    ; 'backToStart - Goes back to the start of the trail.\n'
    ; 'inspector - Answers the inspector itself.\n'
    ; 'close - Exits the Inspector.\n'
    ; 'help - Prints this helpful message.\n'.
].

i@(Inspector traits) last
[i trail top].

i@(Inspector traits) slots
[i here slotNames].

i@(Inspector traits) indexedSlots
[| s |
  s := Console writer.
  (i here is: Sequence)
    ifFalse: [^ Nil].
  s nextPut: ${.
  i here doWithIndex:
    [| :each :index | s ; index printString ; ': ' ; each printString ; '.\n'].
  s nextPut: $}.
  s newLine.
].

i@(Inspector traits) parents
[i here _map delegates].

i@(Inspector traits) visit: obj
[
  i trail push: i here.
  i here := obj.
  i here
].

i@(Inspector traits) visit: _@Nil
['Nil: nothing done.'].

i@(Inspector traits) go: slotName@(Symbol traits)
[i visit: (i here atSlotNamed: slotName)].

i@(Inspector traits) go: slotName
[i go: slotName intern].

i@(Inspector traits) go: index@(Integer traits)
[i visit: (i here at: index)].

i@(Inspector traits) back
"Moves the last context off the trail Stack and makes it it."
[
  i here := i trail pop
].

i@(Inspector traits) back: n
"Moves the last n contexts off the trail Stack and makes the last one here."
[
  n timesRepeat: [i here := i trail pop]
].

i@(Inspector traits) backToStart
"Clears the trail stack and returns the inspector to the original object
inspected."
[
  i here := i trail bottom.
  i trail clear.
  i trail push: i here
].

i@(Inspector traits) close
"Sever all the connections that make the Inspector work, for memory safety,
and return the Inspector."
[
  i here := Nil.
  i trail := Nil.
  i entryPoint removeSlot: #inspector.
  i
].
