
"Support functions to help with development"

"#as: implementations do: [|:each| inform: each definitionLocation ]."

"(#parseExpression findOn: {Syntax Parser}) definitionLocation"

"'' allRoles."


x@(Root traits) allRoles
[ |array writer |
  array: ExtensibleArray new.
  writer: array writer.
  x allDelegates do: [|:delegate| delegate roleReader >> [|:r| r selector -> r rolePositions] >> writer].
  array
].

d@(Debugger traits) printCurrentStack &limit: limit &stream: out &showLocation: showLocation
[
  d clone `>> [baseFramePointer: (d interpreter framePointerOf: #printCurrentStack).
               buildFrames. 
               printBacktrace &limit: limit &stream: out &showLocation: showLocation ]
].

x@(Root traits) methodsUsingMe
[ |set writer |
  set: Set new.
  writer: set writer.
  x allDelegates do:
    [|:deleg| deleg roleReader do:
       [|:role findOnArray positions|
          findOnArray: (Array newSize: (role selector arity `cacheAs: #arity)).
          positions: role rolePositions.
          0 below: arity do: [|:bitPos| (positions bitAnd: 1 << bitPos) ~= 0 ifTrue: [findOnArray at: bitPos put: x]
                                                                          ifFalse: [findOnArray at: bitPos put: NoRole].
                                     (role selector findOn: findOnArray) ifNotNilDo:
                                          [|:method| (method isSameAs: PrimitiveMethod) ifFalse: [writer nextPut: method method]]]]].
  set
].

x@(Root traits) mostCommonlyCalledMethods
[
  x methodsUsingMe sortBy: [|:x :y| x callCount >= y callCount]
].

x@(Root traits) printMostCommonlyCalledMethods
[
  x mostCommonlyCalledMethods do: [|:m| inform: m printString ; ' count: ' ; m callCount printString ; ' at: ' ; m definitionLocation].
].

