"A bitmap image - analogous to Smalltalks Form"
"The Utah Raster Toolkit has some example code for handling the fact
that the composition operators work on channel values of 0-1 and the
bitmaps use 0-0xFF."
"The colour channels in Forms are premultiplied by the alpha"
"They're stored as 0-0xFF octets in a ByteArray"
"TODO: The storage should be dependant on the type of Form"
"TODO: 32 & 24 bit Forms should use Word32Arrays (or whatever)"
"TODO: Sort out Forms with other than 8bits per channel"

Graphics define: #Form &parents: {Cloneable} &slots:
{#width -> 0. #height -> 0.
 #depth -> 0. #repeat -> 0.
 #offset -> Point origin. "Centre of the Form"
 #clipRect -> (Rectangle origin: Point origin extent: Point origin).
 #colorMap. "ColorMap used to write into this Form"
 #bits
}.

"Bitmaps have a platform independant format"
Graphics define: #Bitmap &parents: {WordArray BigEndian}.

w@(Bitmap traits) new &capacity: size
[
  w newFrom: (MemoryArea newSize: (size * 4) abs) enable &bytesPerWord: 4
].

"Graphics define: #Pixmap &parents: {WordArray}."

"Forms mostly intended for masks and alpha channels"
"Graphics define: #FormAlpha8 &parents: {Form}."
"Graphics define: #FormAlpha1 &parents: {Form}."


f@(Form traits) extent: extent@(Point traits) depth: bitsPerPixel
"Creates a new blank Form with size extent and depth bitsPerPixel"
[
  "TODO: should be 'f copy', but copy is currently broken. Fix copy."
  Form copy `>> [setExtent: extent depth: bitsPerPixel. ]
].

a@(Form traits) setExtent: extent@(Point traits) depth: bitsPerPixel
[
 a close.
 a width: (extent x as: Integer).
 a height: (extent y as: Integer).
 a depth: bitsPerPixel.
 a bits: (Bitmap new &capacity: a bitSize).
 a
].

a@(Form traits) close
[
  a bits ifNotNil: [a bits close. a bits: Nil]
].

a@(Form traits) bitSize
"Size of needed Bitmap"
[| pixelsPerWord size |
  a depth ifNil: [a depth: 1].
  pixelsPerWord: 32 // a depth.
  size: a width + pixelsPerWord - 1 // pixelsPerWord * a height.
  size
].  

a@(Form traits) extent 
[a width <> a height].
