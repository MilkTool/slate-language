
" a location for storing visual/audio/size/color/text/etc properties "

Graphics define: #Theme &parents: {Cloneable}.

Graphics define: #BaseTheme &parents: {Theme}.


{
#foregroundColor -> Colors Black.
#foregroundAlpha -> 1.0.
#backgroundColor -> Colors White.
#backgroundAlpha -> 1.0.
#borderColor -> Colors Black.
#borderWidth -> 2.
#borderAlpha -> 1.0.
#selectionColor -> Colors Blue.
#selectionInverseColor -> Colors White. "things drawn over the selection like text"
#selectionInverseAlpha -> 1.0.
#selectionAlpha -> 1.0.
#font -> 'Courier'.
#bold -> False.
#italic -> False.
#underline -> False.
#strikethrough -> False.
#fontSize -> 12.
#textColor -> Colors Black.
#textAlpha -> 1.0.
#scrollbarForegroundColor -> Colors LightGray.
#scrollbarForegroundAlpha -> 1.0.
#scrollbarBackgroundColor -> Colors DarkGray.
#scrollbarBackgroundAlpha -> 1.0.
#vScrollbarWidth -> 10.
#hScrollbarWidth -> 10


} do: [|:each | 

                BaseTheme addDynamicSlot: each key valued: each value.

      ].


se@(Cloneable traits) useTheme: theme@(Theme traits)
"Add the following theme propertie to an object."
[
  (se hasSlotNamed: #theme)
   ifTrue:
     [se traitsWindow _delegates replaceAll: se theme with: theme.
      se atSlotNamed: #theme put: theme]
   ifFalse:
     [se addSlot: #theme valued: theme.
      se traitsWindow _delegates: {theme} ; se traitsWindow _delegates].
  se
].


