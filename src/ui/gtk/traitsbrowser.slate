Gtk define: #TraitsBrowser &parents: {Cloneable} &slots: { #inspectedVar. #codeBuffer. #view. #traitsView. #methodView. #selectedTrait. #selectedMethod }.
Gtk TraitsBrowser traits atSlotNamed: #printName put: 'Gtk TraitsBrowser'. 

tb@(Gtk TraitsBrowser traits) newFor: var [
	| traitBrowser |
		
	traitBrowser: tb new.
	traitBrowser inspectedVar: var.
	traitBrowser buildView.
	traitBrowser loadTraits.
	traitBrowser
].

tb@(Gtk TraitsBrowser traits) show [
	tb view showAll.
	tb
].

tb@(Gtk TraitsBrowser traits) destroy: _ [
	tb view destroy.
	tb slotNames do: [ | :each | tb atSlotNamed: each put: Nil ].
].

tb@(Gtk TraitsBrowser traits) buildMenuBar [
	| menuBar menu menuItem |
	menuBar: Gtk MenuBar new.
	menu: Gtk Menu new.
	
	menuItem: (Gtk MenuItem newWithMnemonic: '_Do it').
	menuItem when: #activate send: #evaluateSelected: to: tb.
	menu append: menuItem.
	
	menuItem: (Gtk MenuItem newWithMnemonic: '_Print it').
	menuItem when: #activate send: #printSelected: to: tb.
	menu append: menuItem.
	
	menuItem: (Gtk MenuItem newWithMnemonic: '_Inspect it').
	menuItem when: #activate send: #inspectSelected: to: tb.
	menu append: menuItem.
	
	menuBar append: (menu createMenuItem: '_Code').
	menu: Gtk Menu new.
	menu append: (Gtk MenuItem newWithMnemonic: '_Cut').
	menu append: (Gtk MenuItem newWithMnemonic: 'C_opy').
	menu append: (Gtk MenuItem newWithMnemonic: '_Paste').
	menuBar append: (menu createMenuItem: '_Edit').
	menuBar
].

tb@(Gtk TraitsBrowser traits) buildToolBar [
	| toolBar toolButton |

	toolBar: Gtk Toolbar new.
	toolButton: (Gtk ToolButton newFromStockID: 'gtk-execute').
	toolButton when: #clicked send: #evaluateSelected: to: tb.
	toolBar insert: toolButton.
	
	toolButton: (Gtk ToolButton newFromStockID: 'gtk-print').
	toolButton when: #clicked send: #printSelected: to: tb.
	toolBar insert: toolButton.
	
	toolButton: (Gtk ToolButton newFromStockID: 'gtk-find').
	toolButton when: #clicked send: #inspectSelected: to: tb.
	toolBar insert: toolButton.
	
	toolBar
].

tb@(Gtk TraitsBrowser traits) buildCodeView [
	| codeView |
	tb codeBuffer: Gtk TextBuffer new.
	codeView: (Gtk TextView newWithBuffer: tb codeBuffer).
	codeView wrapMode: Gtk WrapMode WordChar.
	Gtk ScrolledWindow newWithChild: codeView
].

tb@(Gtk TraitsBrowser traits) buildTraitsView [
	| cell col |
	
	tb traitsView: (Gtk TreeView newWithModel: (Gtk TreeStore newWithTypes: {
		GLib FundamentalType String. 
		GLib FundamentalType String. 
		GLib FundamentalType String. 
	})).
	
	col: Gtk TreeViewColumn new.
 	col title: 'Traits'.
	cell: Gtk CellRendererPixbuf new.
	col packStart: cell &expand: False.
	col addAttribute: #stock-id column: 0 on: cell.
	cell: Gtk CellRendererText new.
	col	packStart: cell.
	col addAttributes: { #text -> 1 } on: cell.	
	tb traitsView appendColumn: col.
	
	tb traitsView gridLines: Gtk TreeViewGridLines Both.
	tb traitsView selection when: #changed send: #onTraitsViewChanged: to: tb.
	Gtk ScrolledWindow newWithChild: tb traitsView	
].

tb@(Gtk TraitsBrowser traits) loadTraits [
	| model |
	model: tb traitsView model.
	model clear.
	tb inspectedVar ifNotNil: [
		tb inspectedVar orderTraits do: [ 
			| :each |
			model append: (Nil -> { 'gtk-execute'. each printName })
		].
	].
].

tb@(Gtk TraitsBrowser traits) onTraitsViewChanged: _ [
	| iter |
	tb traitsView ifNotNil: [
		iter: tb traitsView selection selected.
		iter ifNil: [
			tb selectedTrait: Nil.
			tb loadMethods.
		]
		ifNotNil: [
			| index newSelectedTrait |
			index: ((tb traitsView model stringFromIter: iter) as: Integer).
			newSelectedTrait: (tb inspectedVar orderTraits at: index).
			(newSelectedTrait = tb selectedTrait)
				ifFalse: [ 
					tb selectedTrait: newSelectedTrait.
					tb loadMethods.
				]
		]
	]
].

tb@(Gtk TraitsBrowser traits) buildMethodsView [
	| cell col |
	
	tb methodView: (Gtk TreeView newWithModel: (Gtk TreeStore newWithTypes: {
		GLib FundamentalType String. 
		GLib FundamentalType String. 
		GLib FundamentalType String. 
	})).
	
	col: Gtk TreeViewColumn new.
 	col title: 'Methods'.
	cell: Gtk CellRendererPixbuf new.
	col packStart: cell &expand: False.
	col addAttribute: #stock-id column: 0 on: cell.
	cell: Gtk CellRendererText new.
	col	packStart: cell.
	col addAttributes: { #text -> 1 } on: cell.	
	tb methodView appendColumn: col.
	
	tb methodView gridLines: Gtk TreeViewGridLines Both.
	tb methodView selection when: #changed send: #onMethodsViewChanged: to: tb.
	Gtk ScrolledWindow newWithChild: tb methodView	
].

tb@(Gtk TraitsBrowser traits) onMethodsViewChanged: _ [
	| iter |
	tb methodView ifNotNil: [
		iter: tb methodView selection selected.
		iter ifNil: [
			tb selectedMethod: Nil.
			tb loadCode.
		]
		ifNotNil: [
			| index newSelectedMethod |
			index: ((tb methodView model stringFromIter: iter) as: Integer).
			newSelectedMethod: (tb selectedTrait methods at: index).
			(newSelectedMethod = tb selectedMethod)
				ifFalse: [ 
					tb selectedMethod: newSelectedMethod.
					tb loadCode.
				]
		]
	]
].

tb@(Gtk TraitsBrowser traits) loadMethods [
	| model |
	model: tb methodView model.
	model clear.
	tb selectedTrait ifNotNil: [
		tb selectedTrait methods do: [ 
			| :each |
			model append: (Nil -> { 'gtk-execute'. each selector })
		].
	].
].

tb@(Gtk TraitsBrowser traits) buildView [
	| vBox |
	
	tb view: Gtk Window newTopLevel.
	tb view when: #destroy send: #destroy: to: tb.
	tb view title: 'Traits Browser'.
	tb view defaultSizeWidth: 640 height: 480.
	vBox: Gtk VBox new.
	vBox packStart: (tb buildMenuBar) &expand: False.
	vBox packStart: (tb buildToolBar) &expand: False.
	vBox packStart: (Gtk VPaned new
		first: ((Gtk HPaned new
			first: (tb buildTraitsView sizeRequest: 320 , -1 )
			second: (tb buildMethodsView sizeRequest: 320 , -1 )
		) sizeRequest: -1 , 240 )
		second: (tb buildCodeView sizeRequest: -1 , 240)).
	vBox packStart: (Gtk Statusbar new) &expand: False.
	tb view add: vBox.
	tb
].

tb@(Gtk TraitsBrowser traits) loadCode [
	tb codeBuffer clear.
	(tb selectedMethod is: CompiledMethod) ifTrue: [		
		tb selectedMethod sourceTree 
			ifNil: [
				tb codeBuffer text: tb selectedMethod printString
			]
			ifNotNil: [ 
				| stream |
				stream: String writer.
				(Syntax SourceWriter newFor: stream) print: tb selectedMethod sourceTree.
				tb codeBuffer text: stream contents
			].
	].
].

