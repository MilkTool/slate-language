
Graphics define: #InspectorMorph &parents: {WindowMorph} &slots: {#underlyingObject -> Nil. #selectedItem -> Nil}.

m@(InspectorMorph traits) newOn: obj parent: parent &x: x &y: y &width: width &height: height 
[ | im leftPane rightPane buttonMorph slotListbox arrayListbox le |
  im: m new.
  im underlyingObject: obj.
  x `defaultsTo: 0.
  y `defaultsTo: 0.
  width `defaultsTo: 320.
  height `defaultsTo: 240.
  im percentages: {30. 70}.
  im title: 'Inspecting: ' ; obj printName.
  im vertical: False.
  le: LineEditorMorph new.
  buttonMorph: LabelMorph new.
  slotListbox: ListboxMorph new.
  slotListbox items: obj slotNames.
  arrayListbox: ListboxMorph new.
  (obj is: Sequence)
    ifTrue: [arrayListbox items: obj]
    ifFalse: [arrayListbox items: {}].
  m@(slotListbox) selectionChanged
  [
    m selectedItems do: [ |:item| 
       im selectedItem: (obj atSlotNamed: item).
       le editor reset.
       le editor insert: (obj atSlotNamed: item) printString at: le editor cursor]
  ].
  m@(arrayListbox) selectionChanged
  [
     m selectedItems do: [ |:item| 
       im selectedItem: item.
       le editor reset.
       le editor insert: item printString at: le editor cursor]
  ].

  b@(buttonMorph) handleMyself: e@(MouseButtonClickEvent traits) [im selectedItem ifNotNilDo: [|:so| im newOn: so parent: parent]].
  buttonMorph text: 'Inspect'.
  leftPane: AlignmentMorph new `>> [percentages: {70. 30}. setChildren: {slotListbox. arrayListbox}. ].
  rightPane: AlignmentMorph new `>> [percentages: {80. 20}. setChildren: {le. buttonMorph}. ].
  im setChildren: {leftPane. rightPane}.
  im region: (Rectangle origin: x , y extent: width , height).
  parent addChild: im.
  im pack.
  im
].
