define: #Value &parents: {Pointer}.

v@(Value traits) new [
  v shouldNotImplement
].

"------------------------------------Operations on all values-----------------------------------------"

"const char *LLVMGetValueName(LLVMValueRef Val);"
v@(Value traits) name [
  Lib primitives LLVMGetValueName applyTo: {v handle}
].

"void LLVMSetValueName(LLVMValueRef Val, const char *Name);"
v@(Value traits) name: name@(String traits) [
  Lib primitives LLVMSetValueName applyTo: {v handle. name }.
  v
].

Value traits define: #User &parents: {Value}.

Value traits define: #Constant &parents: {Value User}.

Value traits define: #GlobalValue &parents: {Value Constant}.

"------------------------------------Operations on parameters-----------------------------------------"

Value traits define: #Function &parents: {Value GlobalValue}.

"unsigned LLVMCountParams(LLVMValueRef Fn);"
f@(Value Function traits) parameterCount [
  Lib primitives LLVMCountParams applyTo: {f handle}
].

"LLVMValueRef LLVMGetParam(LLVMValueRef Fn, unsigned Index);"
f@(Value Function traits) parameterAt: index@(Integer traits) [
  Value newWithHandle: (
    Lib primitives LLVMGetParam applyTo: {f handle. index}
  )
].

f@(Value Function traits) parameters
[
  parameters ::= Array new &capacity: f parameterCount.
  parameters keysDo:
    [| :index | parameters at: index put: (f parameterAt: index)].
  parameters
].

Value traits define: #GlobalVariable &parents: {Value GlobalValue}.

Value traits define: #BasicBlock &parents: {Value}.

"------------------------------------Operations on basic blocks-----------------------------------------"

"LLVMBasicBlockRef LLVMAppendBasicBlock(LLVMValueRef Fn, const char *Name);"
f@(Value Function traits) addBlockNamed: name@(String traits) [
  Value BasicBlock newWithHandle: (
    Lib primitives LLVMAppendBasicBlock applyTo: {f handle. name }
  )
].

"------------------------------------Operations on basic blocks-----------------------------------------"

"int wrapper_LLVMVerifyFunction(LLVMValueRef Fn);"
f@(Value Function traits) verify &failureAction: failureAction [
  failureAction `defaultsTo: VerifierFailureAction ReturnStatus.
  Lib primitives LLVMVerifyFunction applyTo: { f handle. failureAction }
].

"------------------------------------Constant expressions-----------------------------------------"

Value traits define: #ConstantInt &parents: {Value Constant}.

"LLVMValueRef LLVMConstIntToPtr(LLVMValueRef ConstantVal, LLVMTypeRef ToType);"
ci@(Value ConstantInt traits) as: pointer@(Type Pointer traits) [
  Value newWithHandle: (
    Lib primitives LLVMConstIntToPtr applyTo: {ci handle. pointer handle}
  )
].





