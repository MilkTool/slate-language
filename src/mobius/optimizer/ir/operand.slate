Optimizer ensureNamespace: #IR.
"The bootstrap intermediate representation uses a tree-structured control
flow representation, with instructions at the leaves accepting constants or
variables as inputs and producing some number of variables as outputs."

Optimizer IR define: #Operand &parents: {Cloneable}
 &slots: {#type -> Types Any}.
Optimizer IR define: #Label &parents: {Optimizer IR Operand}
 &slots: {#target}.
"Holds a call target, i.e. Function, Closure, or Method."

Optimizer IR define: #Variable &parents: {Optimizer IR Operand}
 &slots: {#scope}.
""
Optimizer IR define: #InputVariable &parents: {Optimizer IR Variable}.
Optimizer IR define: #OutputVariable &parents: {Optimizer IR Variable}.
Optimizer IR define: #GlobalVariable &parents: {Optimizer IR Variable}
 &slots: {#module. #name. #value}.

Optimizer IR define: #LocalVariable &parents: {Optimizer IR Variable}
 &slots: {#name. #nonLocalUses -> 0}.

Optimizer IR define: #SSAVariable &parents: {Optimizer IR Variable}
 &slots: {#definer. #group}.

Optimizer IR define: #Constant &parents: {Optimizer IR Operand}
 &slots: {#value}.

Optimizer IR define: #Memory &parents: {Optimizer IR Operand}
 &slots: {#base. #offset. #aliases}.

Optimizer IR define: #SSAMemory &parents: {Optimizer IR Memory}
 &slots: {#definer. #group}.

operand@(Optimizer IR Operand traits) walkInput: block
[
  block applyWith: operand
].

mem@(Optimizer IR Memory traits) walkInput: block
[
  block applyWith: mem base.
  block applyWith: mem offset.
  block applyWith: mem
].

operand@(Optimizer IR Operand traits) walkOutput: block
[
].

mem@(Optimizer IR Memory traits) walkOutput: block
[
  block applyWith: mem base.
  block applyWith: mem offset
].
