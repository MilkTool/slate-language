Optimizer MR define: #Instruction &parents: {Link} &slots:
{#basicBlock. #operands -> #{}}.
"An instruction. This must be derived into various specific instructions for
each target. The operands slot holds an array of operands for the instruction.
Instruction types must implement `operandModes' to describe the format of their
operands."

inst@(Optimizer MR Instruction traits) newOperands: operands
[inst cloneSettingSlots: #(operands) to: {operands}].
  
_@(Optimizer MR Instruction traits) operandModes
"Describe the format of the operands."
[shouldOverrideThis].

_@(Optimizer MR Instruction traits) memoryUseLimit
[
  PositiveInfinity
].

inst@(Optimizer MR Instruction traits) do: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        (operand is: Optimizer MR Memory)
          ifTrue:
            [| subModes |
              subModes: mode operandModes.
              operand operands
                doWithIndex:
                  [| :operand :index |
                    block applyWith: operand with: (subModes at: index)
                  ]
            ].
        block applyWith: operand with: mode
      ]
].

inst@(Optimizer MR Instruction traits) inputsDo: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        (operand is: Optimizer MR Memory)
          ifTrue:
            [| subModes |
              subModes: mode operandModes.
              operand operands
                doWithIndex:
                  [| :operand :index |
                    block applyWith: operand with: (subModes at: index)
                  ]
            ].
        mode isInput
          ifTrue:
            [block applyWith: operand with: mode]
      ]
].

inst@(Optimizer MR Instruction traits) outputsDo: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        mode isOutput
          ifTrue:
            [block applyWith: operand with: mode]
      ]
].

inst@(Optimizer MR Instruction traits) transform: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        (mode is: Optimizer MR Memory)
          ifTrue:
            [| subModes |
              subModes: mode operandModes.
              operand operands
                doWithIndex:
                  [| :operand :index |
                    operand operands
                      at: index
                      put: (block applyWith: operand with: (subModes at: index))
                  ]
            ].
        inst operands at: index put: (block applyWith: operand with: mode)
      ]
].


inst@(Optimizer MR Instruction traits) transformInputs: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        (mode is: Optimizer MR Memory)
          ifTrue:
            [| subModes |
              subModes: mode operandModes.
              operand operands
                doWithIndex:
                  [| :operand :index |
                    operand operands
                      at: index
                      put: (block applyWith: operand with: (subModes at: index))
                  ]
            ].
        mode isInput
          ifTrue:
            [inst operands at: index put: (block applyWith: operand with: mode)]
      ]
].

inst@(Optimizer MR Instruction traits) transformOutputs: block
[| modes |
  modes: inst operandModes.
  inst operands
    doWithIndex:
      [| :operand :index mode |
        mode: (modes at: index).
        mode isOutput
          ifTrue:
            [inst operands at: index put: (block applyWith: operand with: mode)]
      ]
].

Optimizer MR define: #PseudoInstruction &parents: {Optimizer MR Instruction}.

Optimizer MR define: #Call &parents: {Optimizer MR Instruction}.
Optimizer MR define: #CallInputs &parents: {Optimizer MR PseudoInstruction}.

inputs@(Optimizer MR CallInputs traits) operandModes
[
  inputs operands collect: [| :var | var register readMode]
].

Optimizer MR define: #CallOutputs &parents: {Optimizer MR PseudoInstruction}.

outputs@(Optimizer MR CallOutputs traits) operandModes
[
  outputs operands collect: [| :var | var register writeMode]
].

Optimizer MR define: #Exit &parents: {Optimizer MR Instruction}.
Optimizer MR define: #Branch &parents: {Optimizer MR Exit}.
Optimizer MR define: #Jump &parents: {Optimizer MR Branch}.

Optimizer MR define: #Move &parents: {Optimizer MR Instruction}.

