Optimizer MR define: #BasicBlock &parents: {Cloneable} &slots:
{#instructions -> LinkedList new.
 #successors -> {}.
 #predecessors -> {}.
 #liveIn.
 #liveOut}.
"A basic block. Contains a LinkedList of instructions, the successor and
predecessors Sets, and slots for storing the Set of variables live on entry
and exit."

bb@(Optimizer MR BasicBlock traits) new
[bb clone `>>
  [instructions: bb instructions new.]
].

bb@(Optimizer MR BasicBlock traits) remove: inst
[
  bb instructions remove: inst
].

bb@(Optimizer MR BasicBlock traits) replace: inst withAll: code
[
  bb addAll: code after: inst.
  bb remove: inst.
  code
].

bb@(Optimizer MR BasicBlock traits) add: inst before: position
[
  inst basicBlock: bb.
  bb instructions add: inst before: position
].

bb@(Optimizer MR BasicBlock traits) add: inst after: position
[
  bb add: inst before: position next
].

bb@(Optimizer MR BasicBlock traits) addAll: code before: position
[
  position == bb instructions
    ifTrue:
      [^ (bb addAllLast: code)].
  code do:
    [| :inst |
      bb add: inst before: position
    ].
  code
].
 
bb@(Optimizer MR BasicBlock traits) addAll: code after: position
[
  bb addAll: code before: position next
].
 
bb@(Optimizer MR BasicBlock traits) addAllFirst: code
[
  bb addAll: code before: bb instructions first
].

bb@(Optimizer MR BasicBlock traits) addAllLast: code
[| position |
  position: bb instructions last.
  (code last is: Optimizer MR Exit)
    ifFalse:
      [[position is: Optimizer MR Exit]
        whileTrue:
          [position: position previous]].
  code do:
    [| :inst |
      inst operands
        do:
          [| :label |
            (label isSameAs: Optimizer MR Label) /\
              [label target isSameAs: Optimizer MR BasicBlock]
              ifTrue:
                [bb successors: (bb successors copyWith: label target).
                  label target predecessors: (label target predecessors copyWith: bb)]
          ].
      position: (bb add: inst after: position)
    ].
  code
].

bb@(Optimizer MR BasicBlock traits) addFirst: inst
[bb add: inst before: bb instructions first].

bb@(Optimizer MR BasicBlock traits) addLast: inst
[bb addAllLast: {inst}].

bb@(Optimizer MR BasicBlock traits) replaceLabel: old with: new
[
  bb instructions
    do:
      [| :inst |
        inst operands
          do:
            [| :label |
              (label isSameAs: Optimizer MR Label) /\
                [label target == old]
                ifTrue:
                  [label target: new]
            ]
      ].
  bb successors replaceAll: old with: new.
  old predecessors: (old successors copyWithout: bb). 
  new predecessors: (new predecessors copyWith: bb).
  bb
].

