Optimizer Platform x86 define: #Absolute8 &parents: {Optimizer Assembly Relocation Absolute. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #Absolute16 &parents: {Optimizer Assembly Relocation Absolute. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #Absolute32 &parents: {Optimizer Assembly Relocation Absolute. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #Relative8 &parents: {Optimizer Assembly Relocation Relative. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #Relative16 &parents: {Optimizer Assembly Relocation Relative. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #Relative32 &parents: {Optimizer Assembly Relocation Relative. Optimizer Assembly Relocation LittleEndian}.
Optimizer Platform x86 define: #RelativeBranch &parents: {Optimizer Assembly Relocation Relative. Optimizer Assembly Relocation LittleEndian}
 &slots: {#byteSize -> 4}.
_@(Optimizer Platform x86 Absolute8 traits) byteSize [1].
_@(Optimizer Platform x86 Absolute16 traits) byteSize [2].
_@(Optimizer Platform x86 Absolute32 traits) byteSize [4].
_@(Optimizer Platform x86 Relative8 traits) byteSize [1].
_@(Optimizer Platform x86 Relative16 traits) byteSize [2].
_@(Optimizer Platform x86 Relative32 traits) byteSize [4].

Optimizer Platform x86 define: #MachineCode &parents: {Optimizer Assembly MachineCode}.

mc@(Optimizer Platform x86 MachineCode traits) valueOf: reloc@(Optimizer Platform x86 RelativeBranch traits)
[reloc target offset - reloc offset].

mc@(Optimizer Platform x86 MachineCode traits) optimizeRelativeBranches
[| code offset branches |
  code: mc code newSameSize writer.
  offset: 0.
  branches: (mc relocations select: #isSameAs: `er <-* Optimizer Platform x86 RelativeBranch).
  branches do: [| :branch opcode instSize disp newSize |
    opcode: (mc code at: branch offset - 1).
    instSize:
      (branch byteSize
        caseOf:
          {1 -> [1].
           2 -> [opcode = 16rE9 ifTrue: [2] ifFalse: [3]].
           4 -> [opcode = 16rE9 ifTrue: [1] ifFalse: [2]]}).
    code nextPutAll: (mc code sliceFrom: offset below: branch offset - instSize).
    offset: branch offset + branch byteSize.
    disp: (mc valueOf: branch) - branch byteSize.  
    newSize: 
      ((disp between: -128 and: 127) 
        ifTrue: [1]
        ifFalse: 
          [(disp between: -32768 and: 32767)
            ifTrue: [2]
            ifFalse: [4]]).
    newSize < branch byteSize
      ifTrue:
        [branch byteSize: newSize.
          newSize = 1
            ifTrue:
              [code nextPutAll:
                {opcode = 16rE9
                  ifTrue: [16rEB]
                  ifFalse: [opcode - 16r10].
                 16rFF}]
            ifFalse:
              [code nextPut: 16r66.
                opcode = 16rE9
                  ifFalse:
                    [code nextPut: 16r0F].
                code nextPutAll: {opcode. 16rFE. 16rFF}].
          branch offset: code position - newSize]].
  mc code: code contents
].

Optimizer Platform x86 define: #Assembler &parents: {Optimizer Assembly Assembler}.

_@(Optimizer Platform x86 Assembler traits) functionAlignment
[
  16
].

a@(Optimizer Platform x86 Assembler traits) serialize: f@(Float traits) as: t@(Types _Integer traits)
[
  0 below: t byteSize do:
    [| :i |
      a code nextPut:
        (f at: (f isLittleEndian ifTrue: [i] ifFalse: [f indexLast - i]))].
].

a@(Optimizer Platform x86 Assembler traits) serialize: f@(Float traits) as: t@(Types _Float traits)
[
  0 below: t byteSize do:
    [| :i |
      a code nextPut:
        (f at: (f isLittleEndian ifTrue: [i] ifFalse: [f indexLast - i]))].
].
      
a@(Optimizer Platform x86 Assembler traits) serialize: i@(Integer traits) as: t@(Types _Integer traits)
[
  t byteSize timesRepeat:
    [a code nextPut: (i bitAnd: 16rFF).
      i: i >> 8].
].

a@(Optimizer Platform x86 Assembler traits) serialize: i@(Integer traits) as: t@(Types _Address traits)
[
  t byteSize timesRepeat:
    [a code nextPut: (i bitAnd: 16rFF).
      i: i >> 8].
].

a@(Optimizer Platform x86 Assembler traits) relocateAbsoluteAgainst: target &relocation: reloc &default: default
[
  a relocations
    nextPut:
      ((reloc ifNil: [Optimizer Platform x86 Absolute32]) new
        `>> [target: target. offset: a code position. ]).
  a serialize: (default ifNil: [0]) as: Types _Address32.
].

a@(Optimizer Platform x86 Assembler traits) relocateRelativeAgainst: target &relocation: reloc &default: default
[
  a relocations
    nextPut:
      ((reloc ifNil: [Optimizer Platform x86 Relative32]) new
        `>> [target: target. offset: a code position. ]).
  a serialize: (default ifNil: [0]) - 4 as: Types _Signed32.
].

a@(Optimizer Platform x86 Assembler traits) relocateBranchAgainst: target
[
  a relocations
    nextPut:
      (Optimizer Platform x86 RelativeBranch new
        `>> [target: target. offset: a code position. ]).
  a serialize: -4 as: Types _Signed32.
].

_@(Optimizer Platform x86 EAX) encoding [0].
_@(Optimizer Platform x86 ECX) encoding [1].
_@(Optimizer Platform x86 EDX) encoding [2].
_@(Optimizer Platform x86 EBX) encoding [3].
_@(Optimizer Platform x86 ESP) encoding [4].
_@(Optimizer Platform x86 EBP) encoding [5].
_@(Optimizer Platform x86 ESI) encoding [6].
_@(Optimizer Platform x86 EDI) encoding [7].

_@(Optimizer Platform x86 ES) encoding [0].
_@(Optimizer Platform x86 CS) encoding [1].
_@(Optimizer Platform x86 SS) encoding [2].
_@(Optimizer Platform x86 DS) encoding [3].
_@(Optimizer Platform x86 FS) encoding [4].
_@(Optimizer Platform x86 GS) encoding [5].

a@(Optimizer Platform x86 Assembler traits) encodingOf: reg@(Optimizer MR Register traits) and: modRM@(Integer traits)
[
  a code nextPut: (16rC0 bitOr: (reg encoding bitOr: modRM)).
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: reg@(Optimizer MR IndexedRegister traits) and: modRM@(Integer traits)
[
  a code nextPut: (16rC0 bitOr: (reg index bitOr: modRM)).
].
  
a@(Optimizer Platform x86 Assembler traits) encodingOf: x@(Optimizer MR Register traits) and: y@(Optimizer MR Register traits)
[ 
  a code nextPut: (16rC0 bitOr: (x encoding bitOr: y encoding << 3)).
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory traits) and: reg@(Optimizer MR Register traits)
[
  a encodingOf: mem and: reg encoding << 3
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Label traits) and: modRM@(Integer traits)

[ 
  a code nextPut: (16r05 bitOr: modRM).
  a relocateAbsoluteAgainst: (a labelOf: mem operands first).
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory DisplacedLabel traits) and: modRM@(Integer traits)
[ 
  a code nextPut: (16r05 bitOr: modRM).
  a relocateAbsoluteAgainst: (a labelOf: mem operands first) &default: mem operands second value.
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Constant traits) and: modRM@(Integer traits)
[
  a code nextPut: (16r05 bitOr: modRM).
  a serialize: mem operands first value as: Types _Address32.
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Indirect traits) and: modRM@(Integer traits)
[
  mem operands first == Optimizer Platform x86 EBP
    ifTrue:
      [a code nextPutAll: {16r45 bitOr: modRM. 0}.
        ^ Nil].
  a code nextPut: (mem operands first encoding bitOr: modRM).
  mem operands first == Optimizer Platform x86 ESP
    ifTrue:
      [a code nextPut: 16r24].

].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Displaced traits) and: modRM@(Integer traits)
[| dispSize |
  dispSize: 
    ((mem operands second isSameAs: Optimizer MR Label)
      ifTrue: [4]
      ifFalse: [mem operands second type byteSize]).
  a code nextPut: 
    ((dispSize > 1 ifTrue: [16r80] ifFalse: [16r40])
      bitOr: (mem operands first encoding bitOr: modRM)).
  mem operands first == Optimizer Platform x86 ESP
    ifTrue:
      [a code nextPut: 16r24].
  (mem operands second isSameAs: Optimizer MR Label)
    ifTrue:
      [a relocateAbsoluteAgainst: (a labelOf: mem operands second)]
    ifFalse:
      [a serialize: mem operands second value as: 
        (dispSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])].
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Indexed traits) and: modRM@(Integer traits)
[
  mem operands second == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid index for memory address.'].
  mem operands first == Optimizer Platform x86 EBP
    ifTrue:
      [a code nextPutAll:
        {16r44 bitOr: modRM.
          mem operands first encoding bitOr: mem operands second encoding << 3.
          0}]
    ifFalse:
      [a code nextPutAll: 
        {16r04 bitOr: modRM.
          mem operands first encoding bitOr: mem operands second encoding << 3}].
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory Scaled traits) and: modRM@(Integer traits)
[
  mem operands first == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid scaled index for memory address.'].
  (mem operands second value lowBit between: 0 and: 3)
    ifFalse: [error: 'Invalid scale for memory address.'].
  a code nextPutAll: 
    {16r04 bitOr: modRM.
      16r05 bitOr: 
        (mem operands first encoding << 3
          bitOr: mem operands second value lowBit << 6).
     0. 0. 0. 0}. 
  
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory ScaledIndex traits) and: modRM@(Integer traits)
[
  mem operands second == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid scaled index for memory address.'].
  (mem operands third value lowBit between: 0 and: 3)
    ifFalse: [error: 'Invalid scale for memory address.'].
  mem operands first == Optimizer Platform x86 EBP
    ifTrue:
      [a code nextPutAll:
        {16r44 bitOr: modRM.
          mem operands first encoding bitOr:
            (mem operands second encoding << 3
              bitOr: mem operands third value lowBit << 6).
          0}]
    ifFalse:
      [a code nextPutAll:
        {16r04 bitOr: modRM.
          mem operands first encoding bitOr: 
            (mem operands second encoding << 3
              bitOr: mem operands third value lowBit << 6)}].
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory DisplacedIndex traits) and: modRM@(Integer traits)
[| dispSize |
  mem operands first == Optimizer Platform x86 EBP
    ifTrue: [error: 'Invalid base for memory address.'].
  mem operands second == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid index for memory address.'].
  dispSize:
    ((mem operands third isSameAs: Optimizer MR Label)
      ifTrue: [4]
      ifFalse: [mem operands second type byteSize]).
  a code nextPutAll:
    {(dispSize > 1 ifTrue: [16r84] ifFalse: [16r44]) bitOr: modRM.
      mem operands first encoding bitOr: mem operands second encoding << 3}.
  (mem operands third isSameAs: Optimizer MR Label)
    ifTrue:
      [a relocateAbsoluteAgainst: (a labelOf: mem operands third)]
    ifFalse:
      [a serialize: mem operands third value as:
        (dispSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])].
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory DisplacedAndScaled traits) and: modRM@(Integer traits)
[| dispSize |
  mem operands first == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid scaled index for memory address.'].
  (mem operands second value lowBit between: 0 and: 3)
    ifFalse: [error: 'Invalid scale for memory address.'].
  dispSize:
    ((mem operands third isSameAs: Optimizer MR Label)
      ifTrue: [4]
      ifFalse: [mem operands second type byteSize]).
  a code nextPutAll:
    {(dispSize > 1 ifTrue: [16r84] ifFalse: [16r44]) bitOr: modRM.
      16r05 bitOr:
        (mem operands first encoding << 3
          mem operands second value lowBit << 6)}.
  (mem operands third isSameAs: Optimizer MR Label)
    ifTrue:
      [a relocateAbsoluteAgainst: (a labelOf: mem operands third)]
    ifFalse:
      [a serialize: mem operands third value as:
        (dispSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])].
].

a@(Optimizer Platform x86 Assembler traits) encodingOf: mem@(Optimizer Platform x86 Memory DisplacedAndScaledIndex traits) and: modRM@(Integer traits)
[| dispSize |
  mem operands second == Optimizer Platform x86 ESP
    ifTrue: [error: 'Invalid scaled index for memory address.'].
  (mem operands third value lowBit between: 0 and: 3)
    ifFalse: [error: 'Invalid scale for memory address.'].
  dispSize:
    ((mem operands fourth isSameAs: Optimizer MR Label)
      ifTrue: [4]
      ifFalse: [mem operands second type byteSize]).
  a code nextPutAll: 
    {(dispSize > 1 ifTrue: [16r84] ifFalse: [16r44]) bitOr: modRM.
      mem operands first encoding bitOr:
        (mem operands second encoding << 3 bitOr:
          mem operands third value lowBit << 6)}.
  (mem operands fourth isSameAs: Optimizer MR Label)
    ifTrue:
      [a relocateAbsoluteAgainst: (a labelOf: mem operands fourth)]
    ifFalse:
      [a serialize: mem operands fourth value as:
        (dispSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])].
].
 
_@(Optimizer Platform x86 adc traits) opcodeForEAXWithImmediate [16r15].
_@(Optimizer Platform x86 adc traits) opcodeForRMWithRegister [16r11].
_@(Optimizer Platform x86 adc traits) modRMForImmediate [2 << 3].
_@(Optimizer Platform x86 add traits) opcodeForEAXWithImmediate [16r05].
_@(Optimizer Platform x86 add traits) opcodeForRMWithRegister [16r11].
_@(Optimizer Platform x86 add traits) modRMForImmediate [0 << 3].
_@(Optimizer Platform x86 sbb traits) opcodeForEAXWithImmediate [16r1D].
_@(Optimizer Platform x86 sbb traits) opcodeForRMWithRegister [16r19].
_@(Optimizer Platform x86 sbb traits) modRMForImmediate [3 << 3].
_@(Optimizer Platform x86 sub traits) opcodeForEAXWithImmediate [16r2d].
_@(Optimizer Platform x86 sub traits) opcodeForRMWithRegister [16r29].
_@(Optimizer Platform x86 sub traits) modRMForImmediate [5 << 3].
_@(Optimizer Platform x86 and traits) opcodeForEAXWithImmediate [16r25].
_@(Optimizer Platform x86 and traits) opcodeForRMWithRegister [16r21].
_@(Optimizer Platform x86 and traits) modRMForImmediate [4 << 3].
_@(Optimizer Platform x86 or traits) opcodeForEAXWithImmediate [16r0D].
_@(Optimizer Platform x86 or traits) opcodeForRMWithRegister [16r09].
_@(Optimizer Platform x86 or traits) modRMForImmediate [1 << 3].
_@(Optimizer Platform x86 xor traits) opcodeForEAXWithImmediate [16r35].
_@(Optimizer Platform x86 xor traits) opcodeForRMWithRegister [16r31].
_@(Optimizer Platform x86 xor traits) modRMForImmediate [6 << 3].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 Instruction traits)
[
  inst operands
    `match: (0 below: 4)
     with: (a assemble: inst)
     &otherwise: [error: 'Unsupported number of operands for assembled instruction']
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BinaryArithmetic traits)
  with: x with: y@(Optimizer MR Constant traits)
[| immSize |
  immSize: y type byteSize.
  x == Optimizer Platform x86 EAX
    ifTrue:
      [a code nextPut: inst opcodeForEAXWithImmediate - (immSize > 1 ifTrue: [0] ifFalse: [1])]
    ifFalse:
      [a code nextPut: (immSize > 1 ifTrue: [16r81] ifFalse: [16r83]).
        a encodingOf: x and: inst modRMForImmediate].
  a serialize: y value as: (immSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BinaryArithmetic traits)
  with: x with: y@(Optimizer MR Register traits)
[
  a code nextPut: inst opcodeForRMWithRegister.
  a encodingOf: x and: y
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BinaryArithmetic traits)
  with: x with: y@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: inst opcodeForRMWithRegister + 2.
  a encodingOf: y and: x
].

_@(Optimizer Platform x86 inc traits) opcodeForRegister [16r40].
_@(Optimizer Platform x86 inc traits) modRMForMemory [0 << 3].
_@(Optimizer Platform x86 dec traits) opcodeForRegister [16r48].
_@(Optimizer Platform x86 dec traits) modRMForMemory [1 << 3].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 UnaryArithmetic traits)
  with: x@(Optimizer MR Register traits)
[
  a code nextPut: inst opcodeForRegister + x encoding
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 UnaryArithmetic traits)
  with: x@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: 16rFF.
  a encodingOf: x and: inst modRMForMemory
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 neg traits)
  with: x
[
  a code nextPut: 16rF7.
  a encodingOf: x and: 3 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 not traits)
  with: x
[
  a code nextPut: 16rF7.
  a encodingOf: x and: 2 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 div traits)
  with: x with: y with: z
[
  a code nextPut: 16rF7.
  a encodingOf: z and: 6 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 idiv traits)
  with: x with: y with: z
[
  a code nextPut: 16rF7.
  a encodingOf: z and: 7 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 mul traits)
  with: x with: y with: z
[
  a code nextPut: 16rF7.
  a encodingOf: z and: 4 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 imulhi traits)
  with: x with: y with: z
[
  a code nextPut: 16rF7.
  a encodingOf: z and: 5 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 imullo traits)
  with: x with: y
[
  a code nextPutAll: {16r0F. 16rAF}.
  a encodingOf: y and: x
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 imulc traits)
  with: x with: y with: c 
[| immSize |
  immSize: c type byteSize.
  a code nextPut: (immSize > 1 ifTrue: [16r69] ifFalse: [16r6B]).
  a encodingOf: y and: x.
  a serialize: c value as: (immSize > 1 ifTrue: [Types _Signed32] ifFalse: [Types _Signed8])
].

_@(Optimizer Platform x86 rcl traits) modRMForMemory [2 << 3].
_@(Optimizer Platform x86 rcr traits) modRMForMemory [3 << 3].
_@(Optimizer Platform x86 rol traits) modRMForMemory [0 << 3].
_@(Optimizer Platform x86 ror traits) modRMForMemory [1 << 3].
_@(Optimizer Platform x86 sal traits) modRMForMemory [4 << 3].
_@(Optimizer Platform x86 sar traits) modRMForMemory [7 << 3].
_@(Optimizer Platform x86 shl traits) modRMForMemory [4 << 3].
_@(Optimizer Platform x86 shr traits) modRMForMemory [5 << 3].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BitShift traits)
  with: x with: y@(Optimizer MR Constant traits)
[
  a code nextPut: (y value = 1 ifTrue: [16rD1] ifFalse: [16rC1]).
  a encodingOf: x and: inst modRM.
  y value = 1
    ifFalse:
      [a serialize: y value as: Types _Unsigned8]
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BitShift traits)
  with: x with: y@(Optimizer MR Register traits)
[
  a code nextPut: 16rD3.
  a encodingOf: x and: inst modRM
].

_@(Optimizer Platform x86 shld traits) opcode [16rA4].
_@(Optimizer Platform x86 shrd traits) opcode [16rAC].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BitReplace traits)
  with: x with: y with: c@(Optimizer MR Constant traits)
[
  a code nextPutAll: {16r0F. inst opcode}.
  a encodingOf: x and: y.
  a serialize: y value as: Types _Unsigned8
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 BitReplace traits)
  with: x with: y with: z@(Optimizer MR Register traits)
[
  a code nextPutAll: {16r0F. inst opcode + 1}.
  a encodingOf: x and: y
].

_@(Optimizer Platform x86 seta traits) opcode [16r97].
_@(Optimizer Platform x86 setae traits) opcode [16r93].
_@(Optimizer Platform x86 setb traits) opcode [16r92].
_@(Optimizer Platform x86 setbe traits) opcode [16r96].
_@(Optimizer Platform x86 setc traits) opcode [16r92].
_@(Optimizer Platform x86 sete traits) opcode [16r94].
_@(Optimizer Platform x86 setg traits) opcode [16r9F].
_@(Optimizer Platform x86 setge traits) opcode [16r9D].
_@(Optimizer Platform x86 setl traits) opcode [16r9C].
_@(Optimizer Platform x86 setle traits) opcode [16r9E].
_@(Optimizer Platform x86 setna traits) opcode [16r96].
_@(Optimizer Platform x86 setnae traits) opcode [16r92].
_@(Optimizer Platform x86 setnb traits) opcode [16r93].
_@(Optimizer Platform x86 setnbe traits) opcode [16r97].
_@(Optimizer Platform x86 setnc traits) opcode [16r93].
_@(Optimizer Platform x86 setne traits) opcode [16r95].
_@(Optimizer Platform x86 setng traits) opcode [16r9E].
_@(Optimizer Platform x86 setnge traits) opcode [16r9C].
_@(Optimizer Platform x86 setnl traits) opcode [16r9D].
_@(Optimizer Platform x86 setnle traits) opcode [16r9F].
_@(Optimizer Platform x86 setno traits) opcode [16r91].
_@(Optimizer Platform x86 setnp traits) opcode [16r9B].
_@(Optimizer Platform x86 setns traits) opcode [16r99].
_@(Optimizer Platform x86 setnz traits) opcode [16r95].
_@(Optimizer Platform x86 seto traits) opcode [16r90].
_@(Optimizer Platform x86 setp traits) opcode [16r9A].
_@(Optimizer Platform x86 setpe traits) opcode [16r9A].
_@(Optimizer Platform x86 setpo traits) opcode [16r9B].
_@(Optimizer Platform x86 sets traits) opcode [16r98].
_@(Optimizer Platform x86 setz traits) opcode [16r94].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 ConditionalSet traits)
  with: x
[
  a code nextPutAll: {16r0F. inst opcode}.
  a encodingOf: x and: 0
].

_@(Optimizer Platform x86 cmova traits) opcode [16r47].
_@(Optimizer Platform x86 cmovae traits) opcode [16r43].
_@(Optimizer Platform x86 cmovb traits) opcode [16r42].
_@(Optimizer Platform x86 cmovbe traits) opcode [16r46].
_@(Optimizer Platform x86 cmovc traits) opcode [16r42].
_@(Optimizer Platform x86 cmove traits) opcode [16r44].
_@(Optimizer Platform x86 cmovg traits) opcode [16r4F].
_@(Optimizer Platform x86 cmovge traits) opcode [16r4D].
_@(Optimizer Platform x86 cmovl traits) opcode [16r4C].
_@(Optimizer Platform x86 cmovle traits) opcode [16r4E].
_@(Optimizer Platform x86 cmovna traits) opcode [16r46].
_@(Optimizer Platform x86 cmovnae traits) opcode [16r42].
_@(Optimizer Platform x86 cmovnb traits) opcode [16r43].
_@(Optimizer Platform x86 cmovnbe traits) opcode [16r47].
_@(Optimizer Platform x86 cmovnc traits) opcode [16r43].
_@(Optimizer Platform x86 cmovne traits) opcode [16r45].
_@(Optimizer Platform x86 cmovng traits) opcode [16r4E].
_@(Optimizer Platform x86 cmovnge traits) opcode [16r4C].
_@(Optimizer Platform x86 cmovnl traits) opcode [16r4D].
_@(Optimizer Platform x86 cmovnle traits) opcode [16r4F].
_@(Optimizer Platform x86 cmovno traits) opcode [16r41].
_@(Optimizer Platform x86 cmovnp traits) opcode [16r4B].
_@(Optimizer Platform x86 cmovns traits) opcode [16r49].
_@(Optimizer Platform x86 cmovnz traits) opcode [16r45].
_@(Optimizer Platform x86 cmovo traits) opcode [16r40].
_@(Optimizer Platform x86 cmovp traits) opcode [16r4A].
_@(Optimizer Platform x86 cmovpe traits) opcode [16r4A].
_@(Optimizer Platform x86 cmovpo traits) opcode [16r4B].
_@(Optimizer Platform x86 cmovs traits) opcode [16r48].
_@(Optimizer Platform x86 cmovz traits) opcode [16r44].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 ConditionalMove traits)
  with: x with: y
[
  a code nextPutAll: {16r0F. inst opcode}.
  a encodingOf: y and: x
].

_@(Optimizer Platform x86 ja traits) opcode [16r87].
_@(Optimizer Platform x86 jae traits) opcode [16r83].
_@(Optimizer Platform x86 jb traits) opcode [16r82].
_@(Optimizer Platform x86 jbe traits) opcode [16r86].
_@(Optimizer Platform x86 jc traits) opcode [16r82].
_@(Optimizer Platform x86 je traits) opcode [16r84].
_@(Optimizer Platform x86 jg traits) opcode [16r8F].
_@(Optimizer Platform x86 jge traits) opcode [16r8D].
_@(Optimizer Platform x86 jl traits) opcode [16r8C].
_@(Optimizer Platform x86 jle traits) opcode [16r8E].
_@(Optimizer Platform x86 jna traits) opcode [16r86].
_@(Optimizer Platform x86 jnae traits) opcode [16r82].
_@(Optimizer Platform x86 jnb traits) opcode [16r83].
_@(Optimizer Platform x86 jnbe traits) opcode [16r87].
_@(Optimizer Platform x86 jnc traits) opcode [16r83].
_@(Optimizer Platform x86 jne traits) opcode [16r85].
_@(Optimizer Platform x86 jng traits) opcode [16r8E].
_@(Optimizer Platform x86 jnge traits) opcode [16r8C].
_@(Optimizer Platform x86 jnl traits) opcode [16r8D].
_@(Optimizer Platform x86 jnle traits) opcode [16r8F].
_@(Optimizer Platform x86 jno traits) opcode [16r81].
_@(Optimizer Platform x86 jnp traits) opcode [16r8B].
_@(Optimizer Platform x86 jns traits) opcode [16r89].
_@(Optimizer Platform x86 jnz traits) opcode [16r85].
_@(Optimizer Platform x86 jo traits) opcode [16r80].
_@(Optimizer Platform x86 jp traits) opcode [16r8A].
_@(Optimizer Platform x86 jpe traits) opcode [16r8A].
_@(Optimizer Platform x86 jpo traits) opcode [16r8B].
_@(Optimizer Platform x86 js traits) opcode [16r88].
_@(Optimizer Platform x86 jz traits) opcode [16r84].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 ConditionalBranch traits)
  with: label
[
  a code nextPutAll: {16r0F. inst opcode}.
  a relocateBranchAgainst: (a labelOf: label)
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 jmp traits)
  with: label@(Optimizer MR Label traits)
[
  a code nextPut: 16rE9.
  a relocateBranchAgainst: (a labelOf: label)
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 jmp traits)
  with: x
[
  a code nextPut: 16rFF.
  a encodingOf: x and: 4 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 lea traits)
  with: x with: y
[
  a code nextPut: 16r8D.
  a encodingOf: y and: x
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 mov traits)
  with: x@(Optimizer MR Register traits) with: y@(Optimizer MR Constant traits)
[
  (inst isSameAs: Optimizer Platform x86 mov16)
    ifTrue: [a code nextPut: 16r66].
  a code nextPut: 
    ((inst isSameAs: Optimizer Platform x86 mov8) ifTrue: [16rB0] ifFalse: [16rB8]) 
      + x encoding.
  a serialize: y value as: Types _Unsigned32
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 mov traits)
  with: x@(Optimizer Platform x86 Memory traits) with: y@(Optimizer MR Constant traits)
[
  (inst isSameAs: Optimizer Platform x86 mov16)
    ifTrue: [a code nextPut: 16r66].
  a code nextPut: ((inst isSameAs: Optimizer Platform x86 mov8) ifTrue: [16rC6] ifFalse: [16rC7]).
  a encodingOf: x and: 0 << 3.
  a serialize: y value as: Types _Unsigned32
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 mov traits)
  with: x@(Optimizer Platform x86 Memory traits) with: y
[
  (inst isSameAs: Optimizer Platform x86 mov16)
    ifTrue: [a code nextPut: 16r66].
  a code nextPut: ((inst isSameAs: Optimizer Platform x86 mov8) ifTrue: [16r88] ifFalse: [16r89]).
  a encodingOf: x and: y
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 mov traits)
  with: x@(Optimizer MR Register traits) with: y
[
  (inst isSameAs: Optimizer Platform x86 mov16)
    ifTrue: [a code nextPut: 16r66].
  a code nextPut: ((inst isSameAs: Optimizer Platform x86 mov8) ifTrue: [16r8A] ifFalse: [16r8B]).
  a encodingOf: y and: x
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 movsx traits)
  with: x with: y
[
  a code nextPutAll:
    {16r0F.
      (inst isSameAs: Optimizer Platform x86 movsx8) ifTrue: [16rBE] ifFalse: [16rBF]}.
  a encodingOf: y and: x
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 movzx traits)
  with: x with: y
[
  a code nextPutAll:
    {16r0F.
      (inst isSameAs: Optimizer Platform x86 movzx8) ifTrue: [16rB6] ifFalse: [16rB7]}.
  a encodingOf: y and: x
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 push traits)
  with: reg@(Optimizer MR Register traits)
[
  a code nextPut: 16r50 + reg encoding
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 push traits)
  with: c@(Optimizer MR Constant traits)
[
  c type byteSize = 1
    ifTrue:
      [a code nextPutAll: {16r6A. c value}]
    ifFalse:
      [a code nextPut: 16r68.
        a serialize: c value as: Types _Signed32].
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 pop traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: 16rFF.
  a encodingOf: mem and: 6 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 leave traits)
[
  a code nextPut: 16rC9
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 lea traits)
  with: reg with: mem
[
  a code nextPut: 16r8D.
  a encodingOf: mem and: reg
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 pop traits)
  with: reg@(Optimizer MR Register traits)
[
  a code nextPut: 16r58 + reg encoding
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 pop traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: 16r8F.
  a encodingOf: mem and: 0 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 popad traits)
[
  a code nextPut: 16r61
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 popfd traits)
[
  a code nextPut: 16r9D
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 pushad traits)
[
  a code nextPut: 16r60
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 pushfd traits)
[
  a code nextPut: 16r9C
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 ret traits)
[
  a code nextPut: 16rC3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 enter traits)
  with: x with: y
[
  a code nextPut: 16rC8.
  a serialize: x value as: Types _Unsigned16.
  a serialize: y value as: Types _Unsigned8
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 cdq traits)
[
  a code nextPut: 16r99
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 call traits)
  with: x
[
  a code nextPut: 16rFF.
  a encodingOf: x and: 2 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 call traits)
  with: label@(Optimizer MR Label traits)
[
  a code nextPut: 16rE8.
  a relocateRelativeAgainst: (a labelOf: label)
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 nop traits)
[
  a code nextPut: 16r90
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fnop traits)
[
  a code nextPutAll: {16rD9. 16rD0}
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 finit traits)
[
  a code nextPutAll: {16r9B. 16rDB. 16rE3}
].

_@(Optimizer Platform x86 fcmovb traits) modRM [0 << 3].
_@(Optimizer Platform x86 fcmovb traits) opcode [16rDA].
_@(Optimizer Platform x86 fcmove traits) modRM [1 << 3].
_@(Optimizer Platform x86 fcmove traits) opcode [16rDA].
_@(Optimizer Platform x86 fcmovbe traits) modRM [2 << 3].
_@(Optimizer Platform x86 fcmovbe traits) opcode [16rDA].
_@(Optimizer Platform x86 fcmovu traits) modRM [3 << 3].
_@(Optimizer Platform x86 fcmovu traits) opcode [16rDA].
_@(Optimizer Platform x86 fcmovnb traits) modRM [0 << 3].
_@(Optimizer Platform x86 fcmovnb traits) opcode [16rDB].
_@(Optimizer Platform x86 fcmovne traits) modRM [1 << 3].
_@(Optimizer Platform x86 fcmovne traits) opcode [16rDB].
_@(Optimizer Platform x86 fcmovnbe traits) modRM [2 << 3].
_@(Optimizer Platform x86 fcmovnbe traits) opcode [16rDB].
_@(Optimizer Platform x86 fcmovnu traits) modRM [3 << 3].
_@(Optimizer Platform x86 fcmovnu traits) opcode [16rDB].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPConditionalMove traits)
  with: reg@(Optimizer MR IndexedRegister traits)
[
  a code nextPut: inst opcode.
  a encodingOf: reg and: inst modRM
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fild traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rDB] ifFalse: [16rDF]).
  a encodingOf: mem and: (mem type byteSize = 8 ifTrue: [5 << 3] ifFalse: [0 << 3]).
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fist traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rDB] ifFalse: [16rDF]).
  a encodingOf: mem and: 2 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fistp traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rDB] ifFalse: [16rDF]).
  a encodingOf: mem and: (mem type byteSize = 8 ifTrue: [7 << 3] ifFalse: [3 << 3]).
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fld traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rD9] ifFalse: [16rDD]).
  a encodingOf: mem and: 0 << 3
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 fld traits)
  with: reg@(Optimizer MR IndexedRegister traits)
[
  a code nextPut: 16rD9.
  a encodingOf: reg and: 0 << 3
].

_@(Optimizer Platform x86 fst traits) modRM [2 << 3].
_@(Optimizer Platform x86 fstp traits) modRM [3 << 3].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPStore traits)
  with: mem@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rD9] ifFalse: [16rDD]).
  a encodingOf: mem and: inst modRM
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPStore traits)
  with: reg@(Optimizer MR IndexedRegister traits)
[
  a code nextPut: 16rDD.
  a encodingOf: reg and: inst modRM
].

_@(Optimizer Platform x86 f2xm1 traits) opcode [16rF0].
_@(Optimizer Platform x86 fabs traits) opcode [16rE1].
_@(Optimizer Platform x86 fchs traits) opcode [16rE0].
_@(Optimizer Platform x86 fcos traits) opcode [16rFF].
_@(Optimizer Platform x86 fpatan traits) opcode [16rF3].
_@(Optimizer Platform x86 fprem traits) opcode [16rF8].
_@(Optimizer Platform x86 fprem1 traits) opcode [16rF5].
_@(Optimizer Platform x86 fptan traits) opcode [16rFF].
_@(Optimizer Platform x86 frndint traits) opcode [16rFC].
_@(Optimizer Platform x86 fscale traits) opcode [16rFD].
_@(Optimizer Platform x86 fsin traits) opcode [16rFE].
_@(Optimizer Platform x86 fsincos traits) opcode [16rFB].
_@(Optimizer Platform x86 fsqrt traits) opcode [16rFA].
_@(Optimizer Platform x86 fxtract traits) opcode [16rF4].
_@(Optimizer Platform x86 fyl2x traits) opcode [16rF1].
_@(Optimizer Platform x86 fyl2xp1 traits) opcode [16rF9].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPImplicitArithmetic traits)
[
  a code nextPutAll: {16rD9. inst opcode}
].

_@(Optimizer Platform x86 fld1 traits) opcode [16rE8].
_@(Optimizer Platform x86 fldl2t traits) opcode [16rE9].
_@(Optimizer Platform x86 fldl2e traits) opcode [16rEA].
_@(Optimizer Platform x86 fldlg2 traits) opcode [16rEC].
_@(Optimizer Platform x86 fldln2 traits) opcode [16rED].
_@(Optimizer Platform x86 fldpi traits) opcode [16rEB].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPLoadConstant traits)
[
  a code nextPutAll: {16rD9. inst opcode}
].

_@(Optimizer Platform x86 fadd traits) modRMForST0 [0].
_@(Optimizer Platform x86 fadd traits) modRMForSTi [0].
_@(Optimizer Platform x86 fdiv traits) modRMForST0 [6].
_@(Optimizer Platform x86 fdiv traits) modRMForSTi [7].
_@(Optimizer Platform x86 fdivr traits) modRMForST0 [7].
_@(Optimizer Platform x86 fdivr traits) modRMForSTi [6].
_@(Optimizer Platform x86 fmul traits) modRMForST0 [1].
_@(Optimizer Platform x86 fmul traits) modRMForSTi [1].
_@(Optimizer Platform x86 fsub traits) modRMForST0 [4].
_@(Optimizer Platform x86 fsub traits) modRMForSTi [5].
_@(Optimizer Platform x86 fsubr traits) modRMForST0 [5].
_@(Optimizer Platform x86 fsubr traits) modRMForSTi [4].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPBinaryArithmetic traits)
  with: dst@(Optimizer MR IndexedRegister traits) with: src@(Optimizer Platform x86 Memory traits)
[
  a code nextPut: (src type byteSize = 4 ifTrue: [16rD8] ifFalse: [16rDC]).
  a encodingOf: src and: inst modRMForST0
].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPBinaryArithmetic traits)
  with: dst@(Optimizer MR IndexedRegister traits) with: src@(Optimizer MR IndexedRegister traits)
[
  dst index = 0
    ifTrue:
      [a code nextPut: 16rD8. 
        a encodingOf: src and: inst modRMForST0]
    ifFalse:
      [a code nextPut: 16rDC.
        a encodingOf: dst and: inst modRMForSTi]
].

_@(Optimizer Platform x86 faddp traits) modRM [0].
_@(Optimizer Platform x86 fdivp traits) modRM [7].
_@(Optimizer Platform x86 fdivrp traits) modRM [6].
_@(Optimizer Platform x86 fmulp traits) modRM [1].
_@(Optimizer Platform x86 fsubp traits) modRM [5].
_@(Optimizer Platform x86 fsubrp traits) modRM [4].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPBinaryArithmeticWithPop traits)
  with: reg@(Optimizer MR IndexedRegister traits)
[
  a code nextPut: 16rDE.
  a encodingOf: reg and: inst modRM
].

_@(Optimizer Platform x86 fiadd traits) modRM [0].
_@(Optimizer Platform x86 fidiv traits) modRM [6].
_@(Optimizer Platform x86 fidivr traits) modRM [7].
_@(Optimizer Platform x86 fimul traits) modRM [1].
_@(Optimizer Platform x86 fisub traits) modRM [4].
_@(Optimizer Platform x86 fisubr traits) modRM [5].

a@(Optimizer Platform x86 Assembler traits) assemble: inst@(Optimizer Platform x86 FPBinaryIntegerArithmetic traits)
  with: mem@(Optimizer Platform x86 Memory traits) 
[ 
  a code nextPut: (mem type byteSize = 4 ifTrue: [16rDA] ifFalse: [16rDE]).
  a encodingOf: mem and: inst modRM
].

