Optimizer ensureNamespace: #Primitive.

Optimizer Primitive define: #Function
  &slots:
    {#name. #sourceTree}.

Optimizer Primitive define: #GlobalVaraible
  &slots:
    {#name. #type. #value}.
    
Optimizer Primitive Function traits compareAndHashUsingSlots: #(name).

Optimizer Primitive define: #Module
  &slots: 
    {#globalVariables -> Set new. 
      #functions -> Set new}.

m@(Optimizer Primitive Module traits) newNamed: name
[
  m clone `>> [globalVariables: m globalVariables new. functions: m functions new. ]
].

m@(Optimizer Primitive Module traits) define: name as: block
[
  m functions include: (Optimizer Primitive Function new `>> [name: name. sourceTree: block. ])
].

m@(Optimizer Primitive Module traits) functionNamed: name
[
  m functions detect: [| :f | f name = name]
].

m@(Optimizer Primitive Module traits) define: name typed: type valued: value
[
  m globalVariables include: (Optimizer Primitive GlobalVariable new `>> [name: name. type: type. value: value. ])
].

m@(Optimizer Primitive Module traits) variableNamed: name
[
  m globalVariables detect: [| :g | g name = name]
].

