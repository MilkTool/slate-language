"This file exists so that the build-up of the full standard image may be
customized without requiring a full bootstrap. This is loaded by post-bootstrap
code which is compiled in to the kernel image."

here load: 'src/mobius/map.slate'.

numerics import: #Mixin from: Mixins.
#(numerics load: _) `er for: {
  'src/lib/fraction.slate'.
  'src/lib/complex.slate'.
  'src/lib/numericMixin.slate'.
}.
#(collections load: _) `er for: {
  'src/lib/linkedlist.slate'.
  'src/lib/cord.slate'.
  'src/lib/sortedSet.slate'.
}.
here load: 'src/lib/traversal.slate'. "Collection Sequence IdentitySet Stack"
prototypes load: 'src/lib/lookup.slate'.

_@prototypes lobby [here].
_@prototypes Syntax [Syntax].
prototypes import: #ReadStream from: streams.
prototypes import: #TraversalStream from: here.
prototypes import: #nodes from: here.
prototypes load: 'src/lib/path.slate'. "lobby IdentitySet ReadStream"
"These require TraversalStream."
prototypes load: 'src/lib/tokenizer.slate'.

collections import: #WriteStream from: streams.
collections import: #PrettyPrinterMixin from: Mixins.
collections import: #Root from: prototypes.
#(collections load: _) `er for: {
  'src/lib/subsequence.slate'. "WriteStream PrettyPrinterMixin Root"
  'src/lib/bag.slate'.
  'src/lib/queue.slate'.
  'src/lib/repetition.slate'. "Root PrettyPrinterMixin"
}.

mappings import: #Set from: collections.
mappings load: 'src/lib/mapping-epilogue.slate'.
collections load: 'src/lib/ringbuffer.slate'. "Queue"

streams import: {#RingBuffer. #Sequence} from: collections.
streams load: 'src/lib/buffer.slate'. "RingBuffer Stream BufferStream WriteStream ReadStream Sequence"

collections import: #Mapping from: mappings.
collections import: {#ReadStream. #WriteStream. #PositionableStream} from: streams.
collections import: #Integer from: numerics.
collections import: {#Method. #Boolean} from: prototypes.
_@collections Nil [Nil].
collections load: 'src/lib/multi-dimensional.slate'. "Mapping Integer Range Method Boolean"

Syntax import: #Stack from: collections.
Syntax load: 'src/lib/precedence.slate'. "Stack"

#(here load: _) `er for: {
'src/lib/inspect.slate'.
'src/lib/directory.slate'.
'src/lib/time.slate'.
'src/lib/concurrency.slate'.
'src/lib/observer.slate'.
'src/lib/method.slate'.
'src/mobius/role.slate'.
'src/lib/image.slate'.
'src/lib/method-query.slate'.
'src/mobius/memory.slate'.
'src/mobius/disassemble.slate'.
'src/mobius/primitive-method.slate'.
'src/mobius/types.slate'.
'src/lib/repl.slate'.
}.

prototypes import: #C from: Types.
prototypes load: 'src/lib/extlib.slate'.
prototypes load: 'src/lib/devsupport.slate'.

prototypes import: #Image from: globals.
prototypes load: 'src/lib/platform.slate'.

"Totally optional, makes for pretty source output and enables C code output."
load: 'src/syntax/writer.slate'.

"Loads AutoLoader definitions from the standard file database."
load: 'src/lib/module.slate'.
AutoLoader readStorage.

"Print the greeting banner and start a REPL - or whatever else you want."
inform: 'Hi, there!'.
inform: 'Please save your image now, (eg. "Image saveNamed: \'slate.image\'.") to avoid repeating this initialization.'.

"Define the REPL as the primary setup for this image. This is called by the
bootstrap method."
_@lobby start [REPL start].
