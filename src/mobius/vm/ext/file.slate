includeHeaderNamed: '"file.h"'.

f@FileTraits handleFor: fname
[| handle!LongInt |
  handle: 'openFile ((struct ByteArray *) fname, SF_READ | SF_WRITE)' directly!LongInt.
  handle >= 0
    ifTrue: [interpreter stackPush: handle asObject]
    ifFalse: [interpreter pushNil]
] `pidginPrimitive.

f@FileTraits handleForInput: fname
[| handle!LongInt |
  handle: 'openFile ((struct ByteArray *) fname, SF_READ)' directly!LongInt.
  handle >= 0
    ifTrue: [interpreter stackPush: handle asObject]
    ifFalse: [interpreter pushNil]
] `pidginPrimitive.

f@FileTraits handleForOutput: fname
[| handle!LongInt |
  handle: 'openFile ((struct ByteArray *) fname, SF_READ | SF_WRITE | SF_CREATE)' directly!LongInt.
  handle >= 0
    ifTrue:
      ['seekFile (handle, sizeOfFile (handle))' directly.
        interpreter stackPush: handle asObject]
    ifFalse: [interpreter pushNil]
] `pidginPrimitive.

f@FileTraits handleForNew: fname
[| handle!LongInt |
  handle: 'openFile ((struct ByteArray *) fname, SF_READ | SF_WRITE | SF_CREATE | SF_CLEAR)' directly!LongInt.
  handle >= 0
    ifTrue: [interpreter stackPush: handle asObject]
    ifFalse: [interpreter pushNil]
] `pidginPrimitive.

file@FileTraits close: handle
[
  'closeFile (handle >> 1)' directly.
  interpreter pushNil
] `pidginPrimitive.

file@FileTraits read: n from: handle into: bytes startingAt: start
[
  interpreter stackPush: 'readFile (handle >> 1, n >> 1, (char *)(((struct ByteArray *) bytes)->elements + (start >> 1)))' directly!LongInt asObject
] `pidginPrimitive.

file@FileTraits write: n to: handle from: bytes startingAt: start
[
  interpreter stackPush: 'writeFile (handle >> 1, n >> 1, (char *)(((struct ByteArray *) bytes)->elements + (start >> 1)))' directly!LongInt asObject
] `pidginPrimitive.

file@FileTraits reposition: handle to: n
[
  interpreter stackPush: 'seekFile (handle >> 1, n >> 1)' directly!LongInt asObject
] `pidginPrimitive.

file@FileTraits positionOf: handle
[
  interpreter stackPush: 'tellFile (handle >> 1)' directly!LongInt asObject
] `pidginPrimitive.

file@FileTraits atEndOf: handle
[
  'endOfFile (handle >> 1)' directly!LongInt = 0
    ifTrue: [interpreter pushFalse] ifFalse: [interpreter pushTrue]
] `pidginPrimitive.

file@FileTraits sizeOf: handle
[
  interpreter stackPush: 'sizeOfFile (handle >> 1)' directly!LongInt asObject
] `pidginPrimitive.

lobby@LobbyObject saveImageNamed: name
"Saves the image to the given filename, and answers True if the image is being
reloaded (from a saved state), and False if the image is still running after
the save."
[
  CurrentMemory rootStackPush: interpreter address.
  interpreter pushTrue.
  'saveImageNamed ((struct ByteArray *) name)' directly!LongInt < 0
    ifTrue:
      [interpreter stackPop.
       interpreter pushNil]
    ifFalse:
      [interpreter stackPop.
       interpreter pushFalse].
  CurrentMemory rootStackPop: 1
] `pidginPrimitive.
