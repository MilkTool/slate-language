"CGI define: #PrintStream &parents: {Parsing BasicParser} &slots: {#rootElement}."

lobby define: #CGI &parents: {Cloneable} &slots:
  {#variables -> Dictionary new.
   #out -> Console writer.
   #xhtml -> Xml XHTMLPrintStream.
   #postValues -> Dictionary new.
   #getValues -> Dictionary new.
}.

cgi@(CGI traits) parseQueryString: queryString into: dict
[
  (queryString splitWithAny: {$&}) do:
   [| :x s key value |
    s := (x as: cgi postString) reader.
    key := s upTo: $=.
    value := Net URLPathEncoder convert: s upToEnd.
    dict at: key put: value].
].

cgi@(CGI traits) on: resource
[
  cgi out := resource writer.
  cgi xhtml := xhtml newOn: cgi out.
].

cgi@(CGI traits) new
[
  resend `>>
    [variables := variables new.
     cgi on: cgi out resource.
     postValues := postValues new.
     getValues := getValues new. ]
].

cgi@(CGI traits) handleCurrentRequest
[
  cgi variables := Environment variables.
  
   (cgi variables at: 'CONTENT_LENGTH' ifAbsent: [Nil]) ifNotNilDo:
     [| :contentlength |
      cgi parseQueryString: (Console reader next: (contentlength as: Integer)) into: cgi postValues].
   (cgi variables at: 'QUERY_STRING' ifAbsent: [Nil]) ifNotNilDo:
     [| :query |
      cgi parseQueryString: query into: cgi getValues].
].

Image startupActions at: #CGI put:
  [CGI new handleCurrentRequest].
